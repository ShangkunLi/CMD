digraph "DFG for'_Z6kerneli' function" {
	Node0x57c59d4f5888[shape=record, label="  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]"];
	Node0x57c59d4e4d28[shape=record, label="  %25 = trunc i64 %index to i32"];
	Node0x57c59d4e5070[shape=record, label="  %index.next = add i64 %index, 4"];
	Node0x57c59d4e50e0[shape=record, label="  %31 = icmp eq i64 %index.next, 512"];
	Node0x57c59d4e5168[shape=record, label="  br i1 %31, label %for.cond.cleanup3, label %vector.body, !llvm.loop !6"];
	Node0x57c59d4f5950[shape=record, label="  %6 = add nsw i64 %index, %1"];
	Node0x57c59d4e48f0[shape=record, label="  %17 = add nuw nsw i64 %index, %0"];
	Node0x57c59d4e4da0[shape=record, label="  %26 = add i32 %add, %25"];
	Node0x57c59d4f59d8[shape=record, label="  %7 = getelementptr inbounds [513 x i32], [513 x i32]* @T, i64 0, i64 %6"];
	Node0x57c59d4f5d30[shape=record, label="  %13 = getelementptr inbounds [514 x [514 x i32]], [514 x [514 x i32]]* @DTW, i64 0, i64 %4, i64 %6"];
	Node0x57c59d4f5ea0[shape=record, label="  %15 = getelementptr inbounds [514 x [514 x i32]], [514 x [514 x i32]]* @DTW, i64 0, i64 %indvars.iv67, i64 %6"];
	Node0x57c59d4e4990[shape=record, label="  %18 = getelementptr inbounds [514 x [514 x i32]], [514 x [514 x i32]]* @DTW, i64 0, i64 %indvars.iv67, i64 %17"];
	Node0x57c59d4e4e10[shape=record, label="  %27 = add nuw nsw i32 %26, 1"];
	Node0x57c59d4f5a48[shape=record, label="  %8 = bitcast i32* %7 to <4 x i32>*"];
	Node0x57c59d4f5d98[shape=record, label="  %14 = bitcast i32* %13 to <4 x i32>*"];
	Node0x57c59d4f5f08[shape=record, label="  %16 = bitcast i32* %15 to <4 x i32>*"];
	Node0x57c59d4e49f8[shape=record, label="  %19 = bitcast i32* %18 to <4 x i32>*"];
	Node0x57c59d4e4e68[shape=record, label="  %28 = sext i32 %27 to i64"];
	Node0x57c59d4f5aa8[shape=oval, color=darkorange, style=filled, label="  %wide.load = load <4 x i32>, <4 x i32>* %8, align 4, !tbaa !2"];
	Node0x57c59d4f5df8[shape=oval, color=darkorange, style=filled, label="  %wide.load74 = load <4 x i32>, <4 x i32>* %14, align 4, !tbaa !2"];
	Node0x57c59d4e4878[shape=oval, color=darkorange, style=filled, label="  %wide.load75 = load <4 x i32>, <4 x i32>* %16, align 4, !tbaa !2"];
	Node0x57c59d4e4a58[shape=oval, color=darkorange, style=filled, label="  %wide.load76 = load <4 x i32>, <4 x i32>* %19, align 8, !tbaa !2"];
	Node0x57c59d4e4f10[shape=record, label="  %29 = getelementptr inbounds [514 x [514 x i32]], [514 x [514 x i32]]* @DTW, i64 0, i64 %indvars.iv.next68, i64 %28"];
	Node0x57c59d4f5b20[shape=record, label="  %9 = sub nsw <4 x i32> %broadcast.splat73, %wide.load"];
	Node0x57c59d4e4ad0[shape=record, label="  %20 = icmp slt <4 x i32> %wide.load74, %wide.load75"];
	Node0x57c59d4e4f78[shape=record, label="  %30 = bitcast i32* %29 to <4 x i32>*"];
	Node0x57c59d4f5b90[shape=record, label="  %10 = icmp slt <4 x i32> %9, zeroinitializer"];
	Node0x57c59d4f5c00[shape=record, label="  %11 = sub nsw <4 x i32> zeroinitializer, %9"];
	Node0x57c59d4e4b58[shape=record, label="  %21 = select <4 x i1> %20, <4 x i32> %wide.load74, <4 x i32> %wide.load75"];
	Node0x57c59d4f5c88[shape=record, label="  %12 = select <4 x i1> %10, <4 x i32> %11, <4 x i32> %9"];
	Node0x57c59d4e4bd0[shape=record, label="  %22 = icmp sgt <4 x i32> %21, %wide.load76"];
	Node0x57c59d4e4c58[shape=record, label="  %23 = select <4 x i1> %22, <4 x i32> %wide.load76, <4 x i32> %21"];
	Node0x57c59d4e4cd0[shape=record, label="  %24 = add nsw <4 x i32> %23, %12"];
	Node0x57c59d4e4ff0[shape=oval, color=darkorange, style=filled, label="  store <4 x i32> %24, <4 x i32>* %30, align 4, !tbaa !2"];
edge [color=blue]
	Node0x57c59d4e5168 -> Node0x57c59d4f5888
	Node0x57c59d4e5168 -> Node0x57c59d4f5950
	Node0x57c59d4e5168 -> Node0x57c59d4f5b20
	Node0x57c59d4e5168 -> Node0x57c59d4f5d30
	Node0x57c59d4e5168 -> Node0x57c59d4f5ea0
	Node0x57c59d4e5168 -> Node0x57c59d4e48f0
	Node0x57c59d4e5168 -> Node0x57c59d4e4990
	Node0x57c59d4e5168 -> Node0x57c59d4e4da0
	Node0x57c59d4e5168 -> Node0x57c59d4e4f10
edge [color=red]
	Node0x57c59d4e5070 -> Node0x57c59d4f5888
	Node0x57c59d4f5888 -> Node0x57c59d4f5950
	Node0x57c59d4f5950 -> Node0x57c59d4f59d8
	Node0x57c59d4f59d8 -> Node0x57c59d4f5a48
	Node0x57c59d4f5a48 -> Node0x57c59d4f5aa8
	Node0x57c59d4f5aa8 -> Node0x57c59d4f5b20
	Node0x57c59d4f5b20 -> Node0x57c59d4f5b90
	Node0x57c59d4f5b20 -> Node0x57c59d4f5c00
	Node0x57c59d4f5b90 -> Node0x57c59d4f5c88
	Node0x57c59d4f5c00 -> Node0x57c59d4f5c88
	Node0x57c59d4f5b20 -> Node0x57c59d4f5c88
	Node0x57c59d4f5950 -> Node0x57c59d4f5d30
	Node0x57c59d4f5d30 -> Node0x57c59d4f5d98
	Node0x57c59d4f5d98 -> Node0x57c59d4f5df8
	Node0x57c59d4f5950 -> Node0x57c59d4f5ea0
	Node0x57c59d4f5ea0 -> Node0x57c59d4f5f08
	Node0x57c59d4f5f08 -> Node0x57c59d4e4878
	Node0x57c59d4f5888 -> Node0x57c59d4e48f0
	Node0x57c59d4e48f0 -> Node0x57c59d4e4990
	Node0x57c59d4e4990 -> Node0x57c59d4e49f8
	Node0x57c59d4e49f8 -> Node0x57c59d4e4a58
	Node0x57c59d4f5df8 -> Node0x57c59d4e4ad0
	Node0x57c59d4e4878 -> Node0x57c59d4e4ad0
	Node0x57c59d4e4ad0 -> Node0x57c59d4e4b58
	Node0x57c59d4f5df8 -> Node0x57c59d4e4b58
	Node0x57c59d4e4878 -> Node0x57c59d4e4b58
	Node0x57c59d4e4b58 -> Node0x57c59d4e4bd0
	Node0x57c59d4e4a58 -> Node0x57c59d4e4bd0
	Node0x57c59d4e4bd0 -> Node0x57c59d4e4c58
	Node0x57c59d4e4a58 -> Node0x57c59d4e4c58
	Node0x57c59d4e4b58 -> Node0x57c59d4e4c58
	Node0x57c59d4e4c58 -> Node0x57c59d4e4cd0
	Node0x57c59d4f5c88 -> Node0x57c59d4e4cd0
	Node0x57c59d4f5888 -> Node0x57c59d4e4d28
	Node0x57c59d4e4d28 -> Node0x57c59d4e4da0
	Node0x57c59d4e4da0 -> Node0x57c59d4e4e10
	Node0x57c59d4e4e10 -> Node0x57c59d4e4e68
	Node0x57c59d4e4e68 -> Node0x57c59d4e4f10
	Node0x57c59d4e4f10 -> Node0x57c59d4e4f78
	Node0x57c59d4e4cd0 -> Node0x57c59d4e4ff0
	Node0x57c59d4e4f78 -> Node0x57c59d4e4ff0
	Node0x57c59d4f5888 -> Node0x57c59d4e5070
	Node0x57c59d4e5070 -> Node0x57c59d4e50e0
	Node0x57c59d4e50e0 -> Node0x57c59d4e5168
}
