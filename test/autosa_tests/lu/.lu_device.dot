digraph "CFG for 'lu_device' function" {
	label="CFG for 'lu_device' function";

	Node0x62c0908959d0 [shape=record,label="{entry:\l  %prev_V = alloca [32 x [32 x float]], align 16\l  %V = alloca [32 x [32 x float]], align 16\l  %U_tmp = alloca [32 x [32 x float]], align 16\l  %L_tmp = alloca [32 x [32 x float]], align 16\l  %0 = bitcast [32 x [32 x float]]* %prev_V to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #5\l  %1 = bitcast [32 x [32 x float]]* %V to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %1) #5\l  %2 = bitcast [32 x [32 x float]]* %U_tmp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %2) #5\l  %3 = bitcast [32 x [32 x float]]* %L_tmp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %3) #5\l  br label %for.cond5.preheader.lr.ph\l}"];
	Node0x62c0908959d0 -> Node0x62c090897aa0;
	Node0x62c090897aa0 [shape=record,label="{for.cond5.preheader.lr.ph:                        \l  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond.cleanup3 ]\l  %cmp9 = icmp eq i64 %indvars.iv, 0\l  br label %for.body8.lr.ph\l}"];
	Node0x62c090897aa0 -> Node0x62c090897b40;
	Node0x62c090897af0 [shape=record,label="{for.cond.cleanup:                                 \l  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %3) #5\l  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %2) #5\l  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %1) #5\l  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #5\l  ret void\l}"];
	Node0x62c090897b40 [shape=record,label="{for.body8.lr.ph:                                  \l  %indvars.iv178 = phi i64 [ %indvars.iv, %for.cond5.preheader.lr.ph ], [\l... %indvars.iv.next179, %for.cond.cleanup7 ]\l  %cmp24 = icmp eq i64 %indvars.iv178, %indvars.iv\l  %4 = add nsw i64 %indvars.iv178, -1\l  br i1 %cmp9, label %for.body8.us.preheader, label %for.body8.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62c090897b40:s0 -> Node0x62c090897be0;
	Node0x62c090897b40:s1 -> Node0x62c090897b90;
	Node0x62c090897b90 [shape=record,label="{for.body8.preheader:                              \l  %arrayidx56 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 %indvars.iv, i64 %indvars.iv178\l  %arrayidx64 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 %indvars.iv, i64 %indvars.iv178\l  %arrayidx72 = getelementptr inbounds [32 x float], [32 x float]* %L, i64\l... %indvars.iv, i64 %indvars.iv178\l  br label %for.body8\l}"];
	Node0x62c090897b90 -> Node0x62c090897f00;
	Node0x62c090897be0 [shape=record,label="{for.body8.us.preheader:                           \l  %arrayidx56.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 0, i64 %indvars.iv178\l  %arrayidx64.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 0, i64 %indvars.iv178\l  %arrayidx72.us = getelementptr inbounds [32 x float], [32 x float]* %L, i64\l... 0, i64 %indvars.iv178\l  br label %for.body8.us\l}"];
	Node0x62c090897be0 -> Node0x62c090897c30;
	Node0x62c090897c30 [shape=record,label="{for.body8.us:                                     \l  %indvars.iv174 = phi i64 [ 0, %for.body8.us.preheader ], [\l... %indvars.iv.next175, %for.inc.us ]\l  %arrayidx11.us = getelementptr inbounds [32 x float], [32 x float]* %A, i64\l... %indvars.iv174, i64 %indvars.iv178\l  %5 = bitcast float* %arrayidx11.us to i32*\l  %6 = load i32, i32* %5, align 4, !tbaa !2\l  %arrayidx15.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 %indvars.iv174, i64 %indvars.iv178\l  %7 = bitcast float* %arrayidx15.us to i32*\l  store i32 %6, i32* %7, align 4, !tbaa !2\l  %8 = bitcast i32 %6 to float\l  br i1 %cmp24, label %if.then25.us, label %if.else42.us\l|{<s0>T|<s1>F}}"];
	Node0x62c090897c30:s0 -> Node0x62c090897dc0;
	Node0x62c090897c30:s1 -> Node0x62c090897c80;
	Node0x62c090897c80 [shape=record,label="{if.else42.us:                                     \l  %arrayidx46.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv174, i64 %4\l  %9 = load float, float* %arrayidx46.us, align 4, !tbaa !2\l  %arrayidx50.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv174, i64 %indvars.iv178\l  store float %9, float* %arrayidx50.us, align 4, !tbaa !2\l  %cmp51.us = icmp eq i64 %indvars.iv174, 0\l  br i1 %cmp51.us, label %if.then52.us, label %if.else73.us\l|{<s0>T|<s1>F}}"];
	Node0x62c090897c80:s0 -> Node0x62c090897d20;
	Node0x62c090897c80:s1 -> Node0x62c090897cd0;
	Node0x62c090897cd0 [shape=record,label="{if.else73.us:                                     \l  %10 = add nsw i64 %indvars.iv174, -1\l  %arrayidx78.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 %10, i64 %indvars.iv178\l  %11 = bitcast float* %arrayidx78.us to i32*\l  %12 = load i32, i32* %11, align 4, !tbaa !2\l  %arrayidx82.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 %indvars.iv174, i64 %indvars.iv178\l  %13 = bitcast float* %arrayidx82.us to i32*\l  store i32 %12, i32* %13, align 4, !tbaa !2\l  %14 = bitcast i32 %12 to float\l  br label %if.end83.us\l}"];
	Node0x62c090897cd0 -> Node0x62c090897d70;
	Node0x62c090897d20 [shape=record,label="{if.then52.us:                                     \l  %15 = load float, float* %arrayidx56.us, align 4, !tbaa !2\l  %div.us = fdiv float %15, %9\l  store float %div.us, float* %arrayidx64.us, align 4, !tbaa !2\l  store float %div.us, float* %arrayidx72.us, align 4, !tbaa !2\l  br label %if.end83.us\l}"];
	Node0x62c090897d20 -> Node0x62c090897d70;
	Node0x62c090897d70 [shape=record,label="{if.end83.us:                                      \l  %16 = phi float [ %div.us, %if.then52.us ], [ %14, %if.else73.us ]\l  %mul.us = fmul float %9, %16\l  %sub96.us = fsub float %8, %mul.us\l  %arrayidx100.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %V, i64 0, i64 %indvars.iv174, i64 %indvars.iv178\l  store float %sub96.us, float* %arrayidx100.us, align 4, !tbaa !2\l  br label %for.inc.us\l}"];
	Node0x62c090897d70 -> Node0x62c090897e10;
	Node0x62c090897dc0 [shape=record,label="{if.then25.us:                                     \l  %arrayidx29.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 %indvars.iv174, i64 0\l  %17 = bitcast float* %arrayidx29.us to i32*\l  %18 = load i32, i32* %17, align 16, !tbaa !2\l  %arrayidx33.us = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv174, i64 0\l  %19 = bitcast float* %arrayidx33.us to i32*\l  store i32 %18, i32* %19, align 16, !tbaa !2\l  %arrayidx41.us = getelementptr inbounds [32 x float], [32 x float]* %U, i64\l... 0, i64 %indvars.iv174\l  %20 = bitcast float* %arrayidx41.us to i32*\l  store i32 %18, i32* %20, align 4, !tbaa !2\l  br label %for.inc.us\l}"];
	Node0x62c090897dc0 -> Node0x62c090897e10;
	Node0x62c090897e10 [shape=record,label="{for.inc.us:                                       \l  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1\l  %exitcond177 = icmp eq i64 %indvars.iv.next175, 32\l  br i1 %exitcond177, label %for.cond.cleanup7, label %for.body8.us\l|{<s0>T|<s1>F}}"];
	Node0x62c090897e10:s0 -> Node0x62c090897eb0;
	Node0x62c090897e10:s1 -> Node0x62c090897c30;
	Node0x62c090897e60 [shape=record,label="{for.cond.cleanup3:                                \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond182 = icmp eq i64 %indvars.iv.next, 32\l  br i1 %exitcond182, label %for.cond.cleanup, label %for.cond5.preheader.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x62c090897e60:s0 -> Node0x62c090897af0;
	Node0x62c090897e60:s1 -> Node0x62c090897aa0;
	Node0x62c090897eb0 [shape=record,label="{for.cond.cleanup7:                                \l  %indvars.iv.next179 = add nuw nsw i64 %indvars.iv178, 1\l  %exitcond181 = icmp eq i64 %indvars.iv.next179, 32\l  br i1 %exitcond181, label %for.cond.cleanup3, label %for.body8.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x62c090897eb0:s0 -> Node0x62c090897e60;
	Node0x62c090897eb0:s1 -> Node0x62c090897b40;
	Node0x62c090897f00 [shape=record,label="{for.body8:                                        \l  %indvars.iv171 = phi i64 [ %indvars.iv, %for.body8.preheader ], [\l... %indvars.iv.next172, %for.inc ]\l  %arrayidx19 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %V, i64 0, i64 %indvars.iv171, i64 %indvars.iv178\l  %21 = bitcast float* %arrayidx19 to i32*\l  %22 = load i32, i32* %21, align 4, !tbaa !2\l  %arrayidx23 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 %indvars.iv171, i64 %indvars.iv178\l  %23 = bitcast float* %arrayidx23 to i32*\l  store i32 %22, i32* %23, align 4, !tbaa !2\l  %24 = bitcast i32 %22 to float\l  br i1 %cmp24, label %if.then25, label %if.else42\l|{<s0>T|<s1>F}}"];
	Node0x62c090897f00:s0 -> Node0x62c090897f50;
	Node0x62c090897f00:s1 -> Node0x62c090897fa0;
	Node0x62c090897f50 [shape=record,label="{if.then25:                                        \l  %arrayidx29 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %prev_V, i64 0, i64 %indvars.iv171, i64 %indvars.iv\l  %25 = bitcast float* %arrayidx29 to i32*\l  %26 = load i32, i32* %25, align 4, !tbaa !2\l  %arrayidx33 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv171, i64 %indvars.iv\l  %27 = bitcast float* %arrayidx33 to i32*\l  store i32 %26, i32* %27, align 4, !tbaa !2\l  %arrayidx41 = getelementptr inbounds [32 x float], [32 x float]* %U, i64\l... %indvars.iv, i64 %indvars.iv171\l  %28 = bitcast float* %arrayidx41 to i32*\l  store i32 %26, i32* %28, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x62c090897f50 -> Node0x62c0908980e0;
	Node0x62c090897fa0 [shape=record,label="{if.else42:                                        \l  %arrayidx46 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv171, i64 %4\l  %29 = load float, float* %arrayidx46, align 4, !tbaa !2\l  %arrayidx50 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %U_tmp, i64 0, i64 %indvars.iv171, i64 %indvars.iv178\l  store float %29, float* %arrayidx50, align 4, !tbaa !2\l  %cmp51 = icmp eq i64 %indvars.iv171, %indvars.iv\l  br i1 %cmp51, label %if.then52, label %if.else73\l|{<s0>T|<s1>F}}"];
	Node0x62c090897fa0:s0 -> Node0x62c090897ff0;
	Node0x62c090897fa0:s1 -> Node0x62c090898040;
	Node0x62c090897ff0 [shape=record,label="{if.then52:                                        \l  %30 = load float, float* %arrayidx56, align 4, !tbaa !2\l  %div = fdiv float %30, %29\l  store float %div, float* %arrayidx64, align 4, !tbaa !2\l  store float %div, float* %arrayidx72, align 4, !tbaa !2\l  br label %if.end83\l}"];
	Node0x62c090897ff0 -> Node0x62c090898090;
	Node0x62c090898040 [shape=record,label="{if.else73:                                        \l  %31 = add nsw i64 %indvars.iv171, -1\l  %arrayidx78 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 %31, i64 %indvars.iv178\l  %32 = bitcast float* %arrayidx78 to i32*\l  %33 = load i32, i32* %32, align 4, !tbaa !2\l  %arrayidx82 = getelementptr inbounds [32 x [32 x float]], [32 x [32 x\l... float]]* %L_tmp, i64 0, i64 %indvars.iv171, i64 %indvars.iv178\l  %34 = bitcast float* %arrayidx82 to i32*\l  store i32 %33, i32* %34, align 4, !tbaa !2\l  %35 = bitcast i32 %33 to float\l  br label %if.end83\l}"];
	Node0x62c090898040 -> Node0x62c090898090;
	Node0x62c090898090 [shape=record,label="{if.end83:                                         \l  %36 = phi float [ %35, %if.else73 ], [ %div, %if.then52 ]\l  %mul = fmul float %29, %36\l  %sub96 = fsub float %24, %mul\l  store float %sub96, float* %arrayidx19, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x62c090898090 -> Node0x62c0908980e0;
	Node0x62c0908980e0 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next172 = add nuw nsw i64 %indvars.iv171, 1\l  %exitcond = icmp eq i64 %indvars.iv.next172, 32\l  br i1 %exitcond, label %for.cond.cleanup7, label %for.body8\l|{<s0>T|<s1>F}}"];
	Node0x62c0908980e0:s0 -> Node0x62c090897eb0;
	Node0x62c0908980e0:s1 -> Node0x62c090897f00;
}
