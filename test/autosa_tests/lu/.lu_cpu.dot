digraph "CFG for 'lu_cpu' function" {
	label="CFG for 'lu_cpu' function";

	Node0x62c090889de0 [shape=record,label="{entry:\l  %prev_V = alloca [32 x [32 x [32 x float]]], align 16\l  %V_tmp = alloca [32 x [32 x [32 x float]]], align 16\l  %U_tmp = alloca [32 x [32 x [32 x float]]], align 16\l  %L_tmp = alloca [32 x [32 x [32 x float]]], align 16\l  %0 = bitcast [32 x [32 x [32 x float]]]* %prev_V to i8*\l  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %0) #5\l  %1 = bitcast [32 x [32 x [32 x float]]]* %V_tmp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %1) #5\l  %2 = bitcast [32 x [32 x [32 x float]]]* %U_tmp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %2) #5\l  %3 = bitcast [32 x [32 x [32 x float]]]* %L_tmp to i8*\l  call void @llvm.lifetime.start.p0i8(i64 131072, i8* nonnull %3) #5\l  br label %for.cond5.preheader.lr.ph\l}"];
	Node0x62c090889de0 -> Node0x62c090890260;
	Node0x62c090890260 [shape=record,label="{for.cond5.preheader.lr.ph:                        \l  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond.cleanup3 ]\l  %cmp9 = icmp eq i64 %indvars.iv, 0\l  %4 = add nsw i64 %indvars.iv, -1\l  br label %for.body8.lr.ph\l}"];
	Node0x62c090890260 -> Node0x62c090890300;
	Node0x62c0908902b0 [shape=record,label="{for.cond.cleanup:                                 \l  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %3) #5\l  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %2) #5\l  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %1) #5\l  call void @llvm.lifetime.end.p0i8(i64 131072, i8* nonnull %0) #5\l  ret void\l}"];
	Node0x62c090890300 [shape=record,label="{for.body8.lr.ph:                                  \l  %indvars.iv235 = phi i64 [ %indvars.iv, %for.cond5.preheader.lr.ph ], [\l... %indvars.iv.next236, %for.cond.cleanup7 ]\l  %cmp30 = icmp eq i64 %indvars.iv235, %indvars.iv\l  %5 = add nsw i64 %indvars.iv235, -1\l  br i1 %cmp9, label %for.body8.us.preheader, label %for.body8.preheader\l|{<s0>T|<s1>F}}"];
	Node0x62c090890300:s0 -> Node0x62c0908903a0;
	Node0x62c090890300:s1 -> Node0x62c090890350;
	Node0x62c090890350 [shape=record,label="{for.body8.preheader:                              \l  %arrayidx75 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %prev_V, i64 0, i64 %indvars.iv, i64 %indvars.iv235, i64\l... %indvars.iv\l  %arrayidx88 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %L_tmp, i64 0, i64 %indvars.iv, i64 %indvars.iv235, i64\l... %indvars.iv\l  %arrayidx98 = getelementptr inbounds [32 x float], [32 x float]* %L, i64\l... %indvars.iv, i64 %indvars.iv235\l  br label %for.body8\l}"];
	Node0x62c090890350 -> Node0x62c0908906c0;
	Node0x62c0908903a0 [shape=record,label="{for.body8.us.preheader:                           \l  %arrayidx75.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %prev_V, i64 0, i64 0, i64 %indvars.iv235, i64 0\l  %arrayidx88.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %L_tmp, i64 0, i64 0, i64 %indvars.iv235, i64 0\l  %arrayidx98.us = getelementptr inbounds [32 x float], [32 x float]* %L, i64\l... 0, i64 %indvars.iv235\l  br label %for.body8.us\l}"];
	Node0x62c0908903a0 -> Node0x62c0908903f0;
	Node0x62c0908903f0 [shape=record,label="{for.body8.us:                                     \l  %indvars.iv231 = phi i64 [ 0, %for.body8.us.preheader ], [\l... %indvars.iv.next232, %for.inc.us ]\l  %arrayidx11.us = getelementptr inbounds [32 x float], [32 x float]* %A, i64\l... %indvars.iv231, i64 %indvars.iv235\l  %6 = bitcast float* %arrayidx11.us to i32*\l  %7 = load i32, i32* %6, align 4, !tbaa !2\l  %arrayidx15.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %prev_V, i64 0, i64 %indvars.iv231, i64 %indvars.iv235\l  %8 = bitcast [32 x float]* %arrayidx15.us to i32*\l  store i32 %7, i32* %8, align 16, !tbaa !2\l  %9 = bitcast i32 %7 to float\l  br i1 %cmp30, label %if.then31.us, label %if.else54.us\l|{<s0>T|<s1>F}}"];
	Node0x62c0908903f0:s0 -> Node0x62c090890580;
	Node0x62c0908903f0:s1 -> Node0x62c090890440;
	Node0x62c090890440 [shape=record,label="{if.else54.us:                                     \l  %arrayidx61.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv231, i64 %5, i64 0\l  %10 = bitcast float* %arrayidx61.us to i32*\l  %11 = load i32, i32* %10, align 16, !tbaa !2\l  %arrayidx67.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv231, i64 %indvars.iv235,\l... i64 0\l  %12 = bitcast float* %arrayidx67.us to i32*\l  store i32 %11, i32* %12, align 16, !tbaa !2\l  %cmp68.us = icmp eq i64 %indvars.iv231, 0\l  %13 = bitcast i32 %11 to float\l  br i1 %cmp68.us, label %if.then69.us, label %if.else99.us\l|{<s0>T|<s1>F}}"];
	Node0x62c090890440:s0 -> Node0x62c0908904e0;
	Node0x62c090890440:s1 -> Node0x62c090890490;
	Node0x62c090890490 [shape=record,label="{if.else99.us:                                     \l  %14 = add nsw i64 %indvars.iv231, -1\l  %arrayidx106.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %L_tmp, i64 0, i64 %14, i64 %indvars.iv235, i64 0\l  %15 = bitcast float* %arrayidx106.us to i32*\l  %16 = load i32, i32* %15, align 16, !tbaa !2\l  %arrayidx112.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %L_tmp, i64 0, i64 %indvars.iv231, i64 %indvars.iv235,\l... i64 0\l  %17 = bitcast float* %arrayidx112.us to i32*\l  store i32 %16, i32* %17, align 16, !tbaa !2\l  %18 = bitcast i32 %16 to float\l  br label %if.end113.us\l}"];
	Node0x62c090890490 -> Node0x62c090890530;
	Node0x62c0908904e0 [shape=record,label="{if.then69.us:                                     \l  %19 = load float, float* %arrayidx75.us, align 16, !tbaa !2\l  %div.us = fdiv float %19, %13\l  store float %div.us, float* %arrayidx88.us, align 16, !tbaa !2\l  store float %div.us, float* %arrayidx98.us, align 4, !tbaa !2\l  br label %if.end113.us\l}"];
	Node0x62c0908904e0 -> Node0x62c090890530;
	Node0x62c090890530 [shape=record,label="{if.end113.us:                                     \l  %20 = phi float [ %div.us, %if.then69.us ], [ %18, %if.else99.us ]\l  %mul.us = fmul float %20, %13\l  %sub133.us = fsub float %9, %mul.us\l  %arrayidx139.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %V_tmp, i64 0, i64 %indvars.iv231, i64 %indvars.iv235,\l... i64 0\l  store float %sub133.us, float* %arrayidx139.us, align 16, !tbaa !2\l  br label %for.inc.us\l}"];
	Node0x62c090890530 -> Node0x62c0908905d0;
	Node0x62c090890580 [shape=record,label="{if.then31.us:                                     \l  %arrayidx37.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %prev_V, i64 0, i64 %indvars.iv231, i64 0, i64 0\l  %21 = bitcast float* %arrayidx37.us to i32*\l  %22 = load i32, i32* %21, align 16, !tbaa !2\l  %arrayidx43.us = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x\l... [32 x [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv231, i64 0, i64 0\l  %23 = bitcast float* %arrayidx43.us to i32*\l  store i32 %22, i32* %23, align 16, !tbaa !2\l  %arrayidx53.us = getelementptr inbounds [32 x float], [32 x float]* %U, i64\l... 0, i64 %indvars.iv231\l  %24 = bitcast float* %arrayidx53.us to i32*\l  store i32 %22, i32* %24, align 4, !tbaa !2\l  br label %for.inc.us\l}"];
	Node0x62c090890580 -> Node0x62c0908905d0;
	Node0x62c0908905d0 [shape=record,label="{for.inc.us:                                       \l  %indvars.iv.next232 = add nuw nsw i64 %indvars.iv231, 1\l  %exitcond234 = icmp eq i64 %indvars.iv.next232, 32\l  br i1 %exitcond234, label %for.cond.cleanup7, label %for.body8.us\l|{<s0>T|<s1>F}}"];
	Node0x62c0908905d0:s0 -> Node0x62c090890670;
	Node0x62c0908905d0:s1 -> Node0x62c0908903f0;
	Node0x62c090890620 [shape=record,label="{for.cond.cleanup3:                                \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond240 = icmp eq i64 %indvars.iv.next, 32\l  br i1 %exitcond240, label %for.cond.cleanup, label %for.cond5.preheader.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x62c090890620:s0 -> Node0x62c0908902b0;
	Node0x62c090890620:s1 -> Node0x62c090890260;
	Node0x62c090890670 [shape=record,label="{for.cond.cleanup7:                                \l  %indvars.iv.next236 = add nuw nsw i64 %indvars.iv235, 1\l  %exitcond238 = icmp eq i64 %indvars.iv.next236, 32\l  br i1 %exitcond238, label %for.cond.cleanup3, label %for.body8.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x62c090890670:s0 -> Node0x62c090890620;
	Node0x62c090890670:s1 -> Node0x62c090890300;
	Node0x62c0908906c0 [shape=record,label="{for.body8:                                        \l  %indvars.iv228 = phi i64 [ %indvars.iv, %for.body8.preheader ], [\l... %indvars.iv.next229, %for.inc ]\l  %arrayidx23 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %V_tmp, i64 0, i64 %indvars.iv228, i64 %indvars.iv235, i64 %4\l  %25 = bitcast float* %arrayidx23 to i32*\l  %26 = load i32, i32* %25, align 4, !tbaa !2\l  %arrayidx29 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %prev_V, i64 0, i64 %indvars.iv228, i64 %indvars.iv235, i64\l... %indvars.iv\l  %27 = bitcast float* %arrayidx29 to i32*\l  store i32 %26, i32* %27, align 4, !tbaa !2\l  %28 = bitcast i32 %26 to float\l  br i1 %cmp30, label %if.then31, label %if.else54\l|{<s0>T|<s1>F}}"];
	Node0x62c0908906c0:s0 -> Node0x62c090890710;
	Node0x62c0908906c0:s1 -> Node0x62c090890760;
	Node0x62c090890710 [shape=record,label="{if.then31:                                        \l  %arrayidx37 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %prev_V, i64 0, i64 %indvars.iv228, i64 %indvars.iv, i64\l... %indvars.iv\l  %29 = bitcast float* %arrayidx37 to i32*\l  %30 = load i32, i32* %29, align 4, !tbaa !2\l  %arrayidx43 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv228, i64 %indvars.iv, i64\l... %indvars.iv\l  %31 = bitcast float* %arrayidx43 to i32*\l  store i32 %30, i32* %31, align 4, !tbaa !2\l  %arrayidx53 = getelementptr inbounds [32 x float], [32 x float]* %U, i64\l... %indvars.iv, i64 %indvars.iv228\l  %32 = bitcast float* %arrayidx53 to i32*\l  store i32 %30, i32* %32, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x62c090890710 -> Node0x62c0908908a0;
	Node0x62c090890760 [shape=record,label="{if.else54:                                        \l  %arrayidx61 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv228, i64 %5, i64 %indvars.iv\l  %33 = bitcast float* %arrayidx61 to i32*\l  %34 = load i32, i32* %33, align 4, !tbaa !2\l  %arrayidx67 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32 x\l... [32 x float]]]* %U_tmp, i64 0, i64 %indvars.iv228, i64 %indvars.iv235, i64\l... %indvars.iv\l  %35 = bitcast float* %arrayidx67 to i32*\l  store i32 %34, i32* %35, align 4, !tbaa !2\l  %cmp68 = icmp eq i64 %indvars.iv228, %indvars.iv\l  %36 = bitcast i32 %34 to float\l  br i1 %cmp68, label %if.then69, label %if.else99\l|{<s0>T|<s1>F}}"];
	Node0x62c090890760:s0 -> Node0x62c0908907b0;
	Node0x62c090890760:s1 -> Node0x62c090890800;
	Node0x62c0908907b0 [shape=record,label="{if.then69:                                        \l  %37 = load float, float* %arrayidx75, align 4, !tbaa !2\l  %div = fdiv float %37, %36\l  store float %div, float* %arrayidx88, align 4, !tbaa !2\l  store float %div, float* %arrayidx98, align 4, !tbaa !2\l  br label %if.end113\l}"];
	Node0x62c0908907b0 -> Node0x62c090890850;
	Node0x62c090890800 [shape=record,label="{if.else99:                                        \l  %38 = add nsw i64 %indvars.iv228, -1\l  %arrayidx106 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32\l... x [32 x float]]]* %L_tmp, i64 0, i64 %38, i64 %indvars.iv235, i64 %indvars.iv\l  %39 = bitcast float* %arrayidx106 to i32*\l  %40 = load i32, i32* %39, align 4, !tbaa !2\l  %arrayidx112 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32\l... x [32 x float]]]* %L_tmp, i64 0, i64 %indvars.iv228, i64 %indvars.iv235, i64\l... %indvars.iv\l  %41 = bitcast float* %arrayidx112 to i32*\l  store i32 %40, i32* %41, align 4, !tbaa !2\l  %42 = bitcast i32 %40 to float\l  br label %if.end113\l}"];
	Node0x62c090890800 -> Node0x62c090890850;
	Node0x62c090890850 [shape=record,label="{if.end113:                                        \l  %43 = phi float [ %42, %if.else99 ], [ %div, %if.then69 ]\l  %mul = fmul float %43, %36\l  %sub133 = fsub float %28, %mul\l  %arrayidx139 = getelementptr inbounds [32 x [32 x [32 x float]]], [32 x [32\l... x [32 x float]]]* %V_tmp, i64 0, i64 %indvars.iv228, i64 %indvars.iv235, i64\l... %indvars.iv\l  store float %sub133, float* %arrayidx139, align 4, !tbaa !2\l  br label %for.inc\l}"];
	Node0x62c090890850 -> Node0x62c0908908a0;
	Node0x62c0908908a0 [shape=record,label="{for.inc:                                          \l  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1\l  %exitcond = icmp eq i64 %indvars.iv.next229, 32\l  br i1 %exitcond, label %for.cond.cleanup7, label %for.body8\l|{<s0>T|<s1>F}}"];
	Node0x62c0908908a0:s0 -> Node0x62c090890670;
	Node0x62c0908908a0:s1 -> Node0x62c0908906c0;
}
